>>> matrix_mul = __import__("100-matrix_mul").matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]
>>> matrix_mul([[10, 20], [30, 40]], [[7, 1, 3], [4, 2, 9]])
[[150, 50, 210], [370, 110, 450]]
>>> matrix_mul([[1, 9], [3, 4]], [[6, 9], [5, 2], [1, 3]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul(120, [[6, 9], [5, 2], [1, 3]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1, 9], [3, 4]], 120)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul(120.00, [[6, 9], [5, 2], [1, 3]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1, 9], [3, 4]], 120.00)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul("Alpha", [[6, 9], [5, 2], [1, 3]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1, 9], [3, 4]], "Beta")
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul([[1, 9], [3, 4]], "Beta")
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul(([1, 2]), [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> matrix_mul(([1, 2],), [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1, 2]], ([3, 4], [5, 6]))
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul({"a": 1, "b": 2}, [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1, 2]], {"c": [3, 4], "d": [5, 6]})
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul([], ([3, 4], [5, 6]))
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul([[10, 20], [30, 40]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> matrix_mul([(1, 2)], [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> matrix_mul([[1, 2]], [[3, 4], (5, 6)])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> matrix_mul([[10, 20], []], [[7, 1, 3], [4, 2, 9]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul([[], [30, 40]], [[7, 1, 3], [4, 2, 9]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul([[10, 20], [30, 40]], [[], [4, 2, 9]])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> matrix_mul([[10, 20], [30, 40]], [[7, 1, 3], []])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> matrix_mul([[10.00, 20.0], [30, 40]], [[7, 1, 3], [4.00, 2.00, 9]])
[[150.0, 50.0, 210.0], [370.0, 110.0, 450]]
>>> matrix_mul([[10, 20], [30.0, 40.00]], [[7.00, 1, 3.00], [4, 2, 9.00]])
[[150.0, 50, 210.0], [370.0, 110.0, 450.0]]
>>> matrix_mul([[10, "Alpha"], [30, 40]], [[7, 1, 3], [4, 2, 9]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[10, 20], ["Alpha", 40]], [[7, 1, 3], [4, 2, 9]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[10, 20], [30, 40]], [[7, "Beta", 3], [4, 2, 9]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[10, 20], [(30,35), 40]], [[7, "Beta", 3], [4, 2, 9]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[10, 20], [30, 40]], [[7, 1, 3], [4, {"a": 1, "b": 2}, 9]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[10, 20], [[30, 35], 40]], [[7, 1, 3], [4, 2, 9]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[10, 20], [30, 40]], [[7, 1, 3], [4, [1, 2], 9]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[10, 20], [30, 40, 50]], [[7, 1, 3], [4, 2, 9]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[10, 20], [30, 40]], [[7, 1, 3], [4, 2, 9, 10]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
